{
  "_args": [
    [
      {
        "raw": "pomelo-collection@>=0.1.0",
        "scope": null,
        "escapedName": "pomelo-collection",
        "name": "pomelo-collection",
        "rawSpec": ">=0.1.0",
        "spec": ">=0.1.0",
        "type": "range"
      },
      "D:\\nodejsWs\\tgame\\game-server"
    ]
  ],
  "_from": "pomelo-collection@>=0.1.0",
  "_id": "pomelo-collection@0.1.0",
  "_inCache": true,
  "_location": "/pomelo-collection",
  "_npmUser": {
    "name": "demon",
    "email": "zhang0925@126.com"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pomelo-collection@>=0.1.0",
    "scope": null,
    "escapedName": "pomelo-collection",
    "name": "pomelo-collection",
    "rawSpec": ">=0.1.0",
    "spec": ">=0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/pomelo-collection/-/pomelo-collection-0.1.0.tgz",
  "_shasum": "5136aeee35ba4932813b58bbc940f9a27731c2fd",
  "_shrinkwrap": null,
  "_spec": "pomelo-collection@>=0.1.0",
  "_where": "D:\\nodejsWs\\tgame\\game-server",
  "author": {
    "name": "XiaogangZhang",
    "email": "zhang0925@gmail.com"
  },
  "dependencies": {},
  "description": "Pomelo-collection is the module for basic data structure in Node.JS. The prefix 'pomelo' means the module is build for the open source game server framework [pomelo](http://pomelo.netease.com/).",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "5136aeee35ba4932813b58bbc940f9a27731c2fd",
    "tarball": "https://registry.npmjs.org/pomelo-collection/-/pomelo-collection-0.1.0.tgz"
  },
  "main": "./lib/collection",
  "maintainers": [
    {
      "name": "demon",
      "email": "zhang0925@126.com"
    }
  ],
  "name": "pomelo-collection",
  "optionalDependencies": {},
  "readme": "# pomelo-collection\nPomelo-collection is the module for basic data structure in Node.JS. The prefix 'pomelo' means the module is build for the open source game server framework [pomelo](http://pomelo.netease.com/). \n\nCurrent the implemention data struction is priorityQueue and queue, more data structure will be added as need.\n##Installation\n```\nnpm install pomelo-collection\n```\n\n##How to Use\n\n###Use PriorityQueue\n```\n\tvar coll = require('pomelo-collection');\n\t\n\t//Use priorityQueue\n\tvar PriorityQueue = coll.priorityQueue;\n\t\n\t//var comparator = function(a, b){\n\t\treturn a > b;\n\t}\n\t\n\t//build a priority queue with custom comparator\n\tvar pq = new PriorityQueue(comparator);\n\t\n\t//Use offer to add element to priorityQueue\n\tpq.offer(1);\n\tpq,offer(2);\n\tpq.offer(3);\n\t\n\t//Peek will get the element but not remove it, in this case, it will print 3 on the console.\n\tconsole.log(pq.peek());\n\t\n\t//pq will get and remove the top element in priorityQueue. In this case, it will print 3, 2, 1.\n\twhile(pq.size()>0){\n\t\tconsole.log(pq.pop());\n\t}\n\t\n```\nThe comparator is not necessary and can be omitted, a default comparator will be used if no comparator is offered, in fact the default comparator is the same as we used in the example.\nThe priofityQueue is implement by an array, the cost of 'shift' and 'pop' are O(logN), where N is the element count in the priorityQueue, and the cost of 'peek' is O(1).\nThe memory cost is O(N).\n\n###Use Queue\n```\n\tvar Queue = require('pomelo-collection').queue;\n\t\n\t//Construct a queue with size 10000\n\tvar queue = new Queue(10000);\n\t\n\t//Use 'push' to add element\n\tqueue.push(1);\n\tqueue.push(2);\n\tqueue.push(3);\n\t\n\t//Use 'pop' to remove element\n\twhile(queue.size()>0){\n\t\tconsole.log(queue.pop());\n\t}\n```\nThe Queue is implement with an array, the cost of 'push' , 'pop' and 'size' are all O(1).\nPush will fail if size exceed limit.\n",
  "version": "0.1.0"
}
